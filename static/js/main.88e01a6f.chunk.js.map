{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","components/CommentsList.tsx","components/PostDetails.tsx","components/UserSelector.tsx","utils/fetchClient.ts","App.tsx","api/post.ts","index.tsx"],"names":["PostsList","posts","onSelectPost","selectedPostId","length","className","map","post","id","title","type","onClick","Loader","NewCommentForm","onAddComment","isNewCommentLoad","isCommentsUpdateError","setIsCommentsUpdateError","setIsCommentDeleteError","useState","nameField","setNameField","emailField","setEmailField","bodyField","setBodyField","isDangerName","setIsDangerName","isDangerEmail","setIsDangerEmail","isDangerTextArea","setIsDangerTextArea","handleOnChange","event","currentTarget","name","value","Error","htmlFor","placeholder","classNames","onChange","preventDefault","validField","validationFields","disabled","CommentsList","comments","onDeleteComment","isCommentDeleteError","comment","href","email","body","PostDetails","selectedPost","isCommentsLoadError","isNoComments","onButtonForm","isShowForm","isShowButton","UserSelector","users","onSelectUser","selectedUser","showUserList","setShowUserList","prevState","role","user","pervState","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","JSON","stringify","headers","then","fetch","response","json","client","App","setPosts","setUsers","setSelectedUser","isUsersLoadingError","setIsUsersLoadingError","isPostsLoadingError","setIsPostsLoadingError","isNoPosts","setIsNoPosts","setSelectedPost","loadComments","setLoadComments","setIsCommentsLoadError","setIsNoComments","setIsShowForm","setIsShowButton","setIsNewCommentLoad","useEffect","loadUsers","a","usersList","handleSelectUser","userId","postList","handleSelectPost","useCallback","postId","loadUserPost","handleAddComment","newComment","postNewComment","commentId","prevComments","allComments","filter","deleteComment","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88e01a6f.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  onSelectPost: (post: Post | null) => void,\n  posts: Post[],\n  selectedPostId: number | undefined,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  onSelectPost,\n  selectedPostId,\n}) => {\n  return (\n    <>\n      {posts.length ? (\n        <div data-cy=\"PostsList\">\n          <p className=\"title\">Posts:</p>\n\n          <table className=\"\n            table\n            is-fullwidth\n            is-striped\n            is-hoverable\n            is-narrow\"\n          >\n            <thead>\n              <tr className=\"has-background-link-light\">\n                <th>#</th>\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {posts.map(post => (\n                <tr data-cy=\"Post\">\n                  <td data-cy=\"PostId\">{post.id}</td>\n\n                  <td data-cy=\"PostTitle\">\n                    {post.title}\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    {selectedPostId !== post.id ? (\n                      <button\n                        type=\"button\"\n                        data-cy=\"PostButton\"\n                        className=\"\n                          button\n                          is-link\n                          is-light\n                        \"\n                        onClick={() => {\n                          onSelectPost(post);\n                        }}\n                      >\n                        Open\n                      </button>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        data-cy=\"PostButton\"\n                        className=\"button is-link\"\n                        onClick={() => {\n                          onSelectPost(null);\n                        }}\n                      >\n                        Close\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n          No posts yet\n        </div>\n      )}\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  onAddComment: (name: string, email: string, body: string) => Promise<void>,\n  isNewCommentLoad: boolean,\n  isCommentsUpdateError: boolean,\n  setIsCommentsUpdateError: React.Dispatch<React.SetStateAction<boolean>>,\n  setIsCommentDeleteError: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  onAddComment,\n  isNewCommentLoad,\n  isCommentsUpdateError,\n  setIsCommentsUpdateError,\n  setIsCommentDeleteError,\n}) => {\n  const [nameField, setNameField] = useState('');\n  const [emailField, setEmailField] = useState('');\n  const [bodyField, setBodyField] = useState('');\n  const [isDangerName, setIsDangerName] = useState(false);\n  const [isDangerEmail, setIsDangerEmail] = useState(false);\n  const [isDangerTextArea, setIsDangerTextArea] = useState(false);\n\n  const handleOnChange = (\n    event: React.ChangeEvent<HTMLInputElement> |\n    React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setNameField(value);\n        setIsDangerName(false);\n        break;\n      case 'email':\n        setEmailField(value);\n        setIsDangerEmail(false);\n        break;\n      case 'body':\n        setBodyField(value);\n        setIsDangerTextArea(false);\n        break;\n      default:\n        throw new Error('Unknown field');\n    }\n  };\n\n  const validationFields = () => {\n    let validField = true;\n\n    if (!nameField) {\n      setIsDangerName(true);\n      validField = false;\n    }\n\n    if (!emailField) {\n      setIsDangerEmail(true);\n      validField = false;\n    }\n\n    if (!bodyField) {\n      setIsDangerTextArea(true);\n      validField = false;\n    }\n\n    return validField;\n  };\n\n  const handleAddButton = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (!isNewCommentLoad && !isCommentsUpdateError && validationFields()) {\n      setBodyField('');\n    }\n\n    if (nameField && emailField && bodyField) {\n      onAddComment(\n        nameField,\n        emailField,\n        bodyField,\n      );\n    }\n  };\n\n  const handleClearButton = () => {\n    setNameField('');\n    setEmailField('');\n    setBodyField('');\n    setIsDangerName(false);\n    setIsDangerEmail(false);\n    setIsDangerTextArea(false);\n    setIsCommentsUpdateError(false);\n    setIsCommentDeleteError(false);\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\">\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"\n          control\n          has-icons-left\n          has-icons-right\"\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames(\n              'input',\n              { 'is-danger': isDangerName },\n            )}\n            value={nameField}\n            onChange={handleOnChange}\n          />\n\n          <span className=\"\n            icon\n            is-small\n            is-left\"\n          >\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {isDangerName && (\n            <>\n              <span\n                className={classNames(\n                  'icon',\n                  'is-small',\n                  'is-right',\n                  'has-text-danger',\n                )}\n                data-cy=\"ErrorIcon\"\n              >\n                <i className=\"fas fa-exclamation-triangle\" />\n              </span>\n\n              <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n                Name is required\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"\n          control\n          has-icons-left\n          has-icons-right\"\n        >\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames(\n              'input',\n              { 'is-danger': isDangerEmail },\n            )}\n            value={emailField}\n            onChange={handleOnChange}\n          />\n\n          <span className=\"\n            icon\n            is-small\n            is-left\"\n          >\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {isDangerEmail && (\n            <>\n              <span\n                className={classNames(\n                  'icon',\n                  'is-small',\n                  'is-right',\n                  'has-text-danger',\n                )}\n                data-cy=\"ErrorIcon\"\n              >\n                <i className=\"fas fa-exclamation-triangle\" />\n              </span>\n\n              <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n                Email is required\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames(\n              'textarea',\n              { 'is-danger': isDangerTextArea },\n            )}\n            value={bodyField}\n            onChange={handleOnChange}\n          />\n        </div>\n\n        {isDangerTextArea && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames(\n              'button',\n              'is-link',\n              { 'is-loading': isNewCommentLoad },\n            )}\n            onClick={handleAddButton}\n            disabled={isCommentsUpdateError}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"\n              button\n              is-link\n              is-light\n            \"\n            onClick={handleClearButton}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n\n      {isCommentsUpdateError && (\n        <div\n          className=\"notification is-danger\"\n          data-cy=\"CommentsAddError\"\n        >\n          Unable to add comment. Try again!\n        </div>\n      )}\n    </form>\n  );\n};\n","import React from 'react';\nimport { Comment } from '../types/Comment';\n\ntype Props = {\n  comments: Comment[] | null,\n  isCommentDeleteError: boolean,\n  onDeleteComment: (commentId: number) => void,\n};\n\nexport const CommentsList: React.FC<Props> = ({\n  comments,\n  onDeleteComment,\n  isCommentDeleteError,\n}) => {\n  return comments?.length ? (\n    <>\n      <p className=\"title is-4\">Comments:</p>\n      {comments.map(comment => (\n        <article\n          className=\"message is-small\"\n          data-cy=\"Comment\"\n          key={comment.id}\n        >\n          <div className=\"message-header\">\n            <a href={`mailto:${comment.email}`} data-cy=\"CommentAuthor\">\n              {comment.name}\n            </a>\n            <button\n              data-cy=\"CommentDelete\"\n              type=\"button\"\n              className=\"delete is-small\"\n              aria-label=\"delete\"\n              onClick={() => onDeleteComment(comment.id)}\n            >\n              delete button\n            </button>\n          </div>\n\n          <div className=\"message-body\" data-cy=\"CommentBody\">\n            {comment.body}\n          </div>\n        </article>\n      ))}\n      {isCommentDeleteError && (\n        <div\n          className=\"notification is-danger\"\n          data-cy=\"CommentsDeleteError\"\n        >\n          Unable to delete comment. Try again!\n        </div>\n      )}\n    </>\n  ) : (\n    <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n      No comments yet\n    </p>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { CommentsList } from './CommentsList';\n\ntype Props = {\n  selectedPost: Post | null,\n  comments: Comment[] | null,\n  isCommentsLoadError: boolean,\n  isNoComments: boolean,\n  onButtonForm: () => void,\n  isShowForm: boolean,\n  isShowButton: boolean,\n  onAddComment: (name: string, email: string, body: string) => Promise<void>,\n  isCommentsUpdateError: boolean,\n  setIsCommentsUpdateError: React.Dispatch<React.SetStateAction<boolean>>,\n  setIsCommentDeleteError: React.Dispatch<React.SetStateAction<boolean>>,\n  isNewCommentLoad: boolean,\n  onDeleteComment: (commentId: number) => void,\n  isCommentDeleteError: boolean,\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  selectedPost,\n  isCommentsLoadError,\n  comments,\n  isNoComments,\n  onButtonForm,\n  isShowForm,\n  isShowButton,\n  onAddComment,\n  isCommentsUpdateError,\n  setIsCommentsUpdateError,\n  isNewCommentLoad,\n  onDeleteComment,\n  isCommentDeleteError,\n  setIsCommentDeleteError,\n}) => {\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${selectedPost?.id}: ${selectedPost?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {selectedPost?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {isNoComments && <Loader />}\n\n          {isCommentsLoadError && !isNoComments && (\n            <div\n              className=\"notification is-danger\"\n              data-cy=\"CommentsError\"\n            >\n              Something went wrong\n            </div>\n          )}\n\n          {!isNoComments && !isCommentsLoadError && (\n            <>\n              <CommentsList\n                comments={comments}\n                onDeleteComment={onDeleteComment}\n                isCommentDeleteError={isCommentDeleteError}\n              />\n\n              <button\n                data-cy=\"WriteCommentButton\"\n                type=\"button\"\n                className={classNames(\n                  'button',\n                  'is-link',\n                  { 'is-hidden': isShowButton },\n                )}\n                onClick={onButtonForm}\n              >\n                Write a comment\n              </button>\n            </>\n          )}\n        </div>\n        {isShowForm && (\n          <NewCommentForm\n            onAddComment={onAddComment}\n            isCommentsUpdateError={isCommentsUpdateError}\n            setIsCommentsUpdateError={setIsCommentsUpdateError}\n            isNewCommentLoad={isNewCommentLoad}\n            setIsCommentDeleteError={setIsCommentDeleteError}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[],\n  selectedUser: User | null,\n  onSelectUser: (user: User) => void,\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  onSelectUser,\n  selectedUser,\n}) => {\n  const [showUserList, setShowUserList] = useState(false);\n\n  const handleButtonToggler = () => {\n    setShowUserList(prevState => !prevState);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames(\n        'dropdown',\n        { 'is-active': showUserList },\n      )}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={handleButtonToggler}\n        >\n          <span>{selectedUser?.name || 'Choose a user'}</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div\n        className=\"dropdown-menu\"\n        id=\"dropdown-menu\"\n        role=\"menu\"\n      >\n        <div className=\"dropdown-content\">\n          {users.map(user => (\n            <a\n              key={user.id}\n              href={`#user-${user.id}`}\n              className={classNames(\n                'dropdown-item',\n                { 'is-active': selectedUser?.id === user.id },\n              )}\n              onClick={() => {\n                onSelectUser(user);\n                setShowUserList(pervState => !pervState);\n              }}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { CommentData } from '../types/Comment';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\ntype DataType = number | CommentData;\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data?: DataType,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: CommentData) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: CommentData) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { Post } from './types/Post';\nimport { User } from './types/User';\nimport { Comment } from './types/Comment';\nimport {\n  getPosts,\n  getUsers,\n  getComments,\n  postComment,\n  deleteComment,\n} from './api/post';\n\nexport const App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isUsersLoadingError, setIsUsersLoadingError] = useState(false);\n  const [isPostsLoadingError, setIsPostsLoadingError] = useState(false);\n  const [isNoPosts, setIsNoPosts] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [loadComments, setLoadComments] = useState<Comment[]>([]);\n  const [isCommentsLoadError, setIsCommentsLoadError] = useState(false);\n  const [isNoComments, setIsNoComments] = useState(false);\n  const [isShowForm, setIsShowForm] = useState(false);\n  const [isShowButton, setIsShowButton] = useState(false);\n  const [isCommentsUpdateError, setIsCommentsUpdateError] = useState(false);\n  const [isNewCommentLoad, setIsNewCommentLoad] = useState(false);\n  const [isCommentDeleteError, setIsCommentDeleteError] = useState(false);\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const usersList = await getUsers();\n\n        setUsers(usersList);\n      } catch {\n        setIsUsersLoadingError(true);\n      }\n    };\n\n    loadUsers();\n  }, []);\n\n  const handleSelectUser = async (user: User) => {\n    setSelectedUser(user);\n    setIsNoPosts(true);\n    setSelectedPost(null);\n    setIsPostsLoadingError(false);\n\n    try {\n      const postList = await getPosts(user?.id);\n\n      setPosts(postList);\n    } catch {\n      setIsPostsLoadingError(true);\n    } finally {\n      setIsNoPosts(false);\n    }\n  };\n\n  const handleSelectPost = useCallback(async (post: Post | null) => {\n    setSelectedPost(post);\n    setIsNoComments(true);\n    setIsShowForm(false);\n    setIsShowButton(false);\n    setIsCommentsUpdateError(false);\n    setIsCommentDeleteError(false);\n\n    if (post) {\n      try {\n        const loadUserPost = await getComments(post.id);\n\n        setLoadComments(loadUserPost);\n      } catch {\n        setIsCommentsLoadError(true);\n      } finally {\n        setIsNoComments(false);\n      }\n    }\n  }, [selectedPost]);\n\n  const handleAddComment = useCallback(async (\n    name: string,\n    email: string,\n    body: string,\n  ) => {\n    setIsNewCommentLoad(true);\n    setIsCommentDeleteError(false);\n    const newComment = {\n      postId: selectedPost?.id,\n      name,\n      email,\n      body,\n    };\n\n    try {\n      const postNewComment = await postComment(newComment);\n\n      setIsCommentsUpdateError(false);\n\n      setLoadComments((comments) => {\n        return comments\n          ? [...comments, postNewComment]\n          : [postNewComment];\n      });\n    } catch {\n      setIsCommentsUpdateError(true);\n    } finally {\n      setIsNewCommentLoad(false);\n    }\n  }, [loadComments]);\n\n  const handleDeleteComment = (commentId: number) => {\n    setIsCommentDeleteError(false);\n    const prevComments = [...loadComments];\n\n    setLoadComments(allComments => (\n      allComments?.filter(comment => comment.id !== commentId)));\n\n    deleteComment(commentId)\n      .then()\n      .catch(() => {\n        setLoadComments(prevComments);\n        setIsCommentDeleteError(true);\n      });\n  };\n\n  const handleButtonForm = () => {\n    setIsShowForm(true);\n    setIsShowButton(true);\n    setIsCommentDeleteError(false);\n  };\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  selectedUser={selectedUser}\n                  onSelectUser={handleSelectUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {isNoPosts && (\n                  <Loader />\n                )}\n\n                {isPostsLoadingError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {!isPostsLoadingError\n                  && selectedUser\n                  && !isNoPosts\n                  && (\n                    <PostsList\n                      posts={posts}\n                      onSelectPost={handleSelectPost}\n                      selectedPostId={selectedPost?.id}\n                    />\n                  )}\n\n                {isUsersLoadingError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"UsersLoadingError\"\n                  >\n                    Unable to load users!\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': selectedPost },\n            )}\n          >\n            <div className=\"tile is-child box is-success\">\n              {selectedPost && (\n                <PostDetails\n                  selectedPost={selectedPost}\n                  comments={loadComments}\n                  isCommentsLoadError={isCommentsLoadError}\n                  isNoComments={isNoComments}\n                  onButtonForm={handleButtonForm}\n                  isShowForm={isShowForm}\n                  isShowButton={isShowButton}\n                  onAddComment={handleAddComment}\n                  isCommentsUpdateError={isCommentsUpdateError}\n                  setIsCommentsUpdateError={setIsCommentsUpdateError}\n                  isNewCommentLoad={isNewCommentLoad}\n                  onDeleteComment={handleDeleteComment}\n                  isCommentDeleteError={isCommentDeleteError}\n                  setIsCommentDeleteError={setIsCommentDeleteError}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { client } from '../utils/fetchClient';\nimport { Post } from '../types/Post';\nimport { Comment, CommentData } from '../types/Comment';\nimport { User } from '../types/User';\n\nexport const getPosts = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getComments = (postId: number): Promise<Comment[]> => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const postComment = (data: CommentData) => {\n  return client.post<Comment>('/comments', data);\n};\n\nexport const deleteComment = (commentId: number) => {\n  return client.delete(`/comments/${commentId}`);\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}